{"ast":null,"code":"import { ENVIRONMENT } from '../core/tokens/environment_token';\nimport { throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./city-url-helper.service\";\nimport * as i3 from \"../mapper/city-service-mapper\";\nexport let CityApiService = /*#__PURE__*/(() => {\n  class CityApiService {\n    constructor(http, urlService, cityMapper, environment) {\n      this.http = http;\n      this.urlService = urlService;\n      this.cityMapper = cityMapper;\n      this.environment = environment;\n      this.API_KEY = environment.cityService.key;\n    }\n\n    getCitySuggestions(searchTerm) {\n      // get city suggestions\n      const url = this.urlService.getUrlCityService(searchTerm).url;\n      return this.http.get(url).pipe(map(response => {\n        return this.cityMapper.parseCityResponse(response);\n      }), catchError(err => {\n        return throwError(err);\n      }));\n    }\n\n  }\n\n  CityApiService.ɵfac = function CityApiService_Factory(t) {\n    return new (t || CityApiService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.CityUrlHelperService), i0.ɵɵinject(i3.CityServiceMapper), i0.ɵɵinject(ENVIRONMENT));\n  };\n\n  CityApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CityApiService,\n    factory: CityApiService.ɵfac,\n    providedIn: 'root'\n  });\n  return CityApiService;\n})();","map":null,"metadata":{},"sourceType":"module"}